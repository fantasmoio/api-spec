openapi: "3.0.2"
x-explorer-enabled: false
x-samples-enabled: false
info:
  version: 0.6.0
  title: Camera Positioning System (CPS) API
  description: High precision global position and orientation for monocular images.
  contact:
    name: Fantasmo Support
    email: hello@fantasmo.io
servers:
  - url: https://api.fantasmo.io/v1
paths:
  /parking.in.radius:
    post:
      description: Check whether there is a parking available in a given radius around a GPS position
      operationId: isThereParkingInGivenRadius
      parameters:
        - in: header
          name: Fantasmo-Key
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - coordinate
                - radius
              properties: # Request parts
                coordinate:
                  $ref: "#/components/schemas/Coordinate"
                radius:
                  description: The radius (in meters) around which we check for parking availability
                  type: number
                  format: float
      responses:
        "200":
          description: A boolean string result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RadiusSearchResult"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /image.localize:
    post:
      description: Compute a high accuracy global position and orientation for the image.
      operationId: localizeImage
      parameters:
        - in: header
          name: Fantasmo-Key
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data: # Media type
            schema: # Request payload
              type: object
              required:
                - capturedAt
                - image
                - intrinsics
                - uuid
              properties: # Request parts
                capturedAt:
                  description: Time in seconds since Unix Epoch that this image was captured.
                  type: number
                  format: double
                coordinate:
                  $ref: "#/components/schemas/Coordinate"
                image:
                  description: Query image for localization.
                  type: string
                  format: binary
                mapId:
                  description: ID of the map to query. If no map ID is provided, the `coordinate` is used to perform a map lookup. If neither are provided, an error is returned.
                  type: string
                intrinsics:
                  $ref: "#/components/schemas/Intrinsics"
                uuid:
                  $ref: "#/components/schemas/Uuid"
                gravity:
                  $ref: "#/components/schemas/Gravity"
                position:
                  $ref: "#/components/schemas/Position"
                referenceFrame:
                  $ref: "#/components/schemas/ReferenceFrame"
                imageResolution:
                  $ref: "#/components/schemas/ImageResolution"
                rotationSpread:
                  description: Total rotation spread since the latter of the start of the session and the last anchor set. Computed as the difference between the minimum and maximum angle along principal axes in radians.
                  type: object
                  required:
                    - pitch
                    - yaw
                    - roll
                  properties:
                    pitch:
                      description: Dimension of rotation on the up-down axis.
                      type: number
                      format: float
                    yaw:
                      description: Dimension of rotation on the left-right axis.
                      type: number
                      format: float
                    roll:
                      description: Dimension of rotation on the front-back axis.
                      type: number
                      format: float
                totalTranslation:
                  description: Total translation in meters since the latter of the start of the session and the last anchor set.
                  type: number
                  format: float
                deviceModel:
                  description: Model of the device that captured the image.
                  type: string
                deviceOs:
                  description: OS of the device that captured the image.
                  enum:
                    - android
                    - ios
                    - windows
                    - unknown
                sdkVersion:
                  description: Version number of the Fantasmo SDK that created the request.
                  type: string
                Udid:
                  description: Universally unique device identifier.
                  type: string
                  format: uuid
                SessionId:
                  description: Localization session identifier. Multiple requests may be sent in a single session.
                  type: string
                  format: uuid
                frameEventCounts:
                  description: Number of frame events occuring since the latter of the start of the session and the last anchor set.
                  type: object
                  required:
                    - excessiveTilt
                    - excessiveBlur
                    - excessiveMotion
                    - lossOfTracking
                    - total
                  properties:
                    excessiveTilt:
                      description: Number of frames experiencing excessive tilt.
                      type: number
                      format: integer
                    excessiveBlur:
                      description: Number of frames experiencing excessive blur.
                      type: number
                      format: integer
                    excessiveMotion:
                      description: Number of frames experiencing excessive motion.
                      type: number
                      format: integer
                    lossOfTracking:
                      description: Number of frames experiencing loss of tracking.
                      type: number
                      format: integer
                    total:
                      description: Total  number of frames.
                      type: number
                      format: integer
      responses:
        "200":
          description: A CPS localization result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Result"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "5XX":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Coordinate:
      description: An estimate of the position and orientation that is used to constrain search. Coarse resolution is acceptable such as GPS or cellular tower proximity.
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          description: Latitude in degrees.
          type: number
          format: double
        longitude:
          description: Longitude in degrees.
          type: number
          format: double
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    RadiusSearchResult:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Intrinsics:
      description: Camera characterization parameters.
      type: object
      required:
        - cx
        - cy
        - fx
        - fy
      properties:
        cx:
          description: Principal point offset along the image *x* axis in pixels.
          type: number
          format: float
        cy:
          description: Principal point offset along the image *y* axis in pixels.
          type: number
          format: float
        fx:
          description: Focal length in pixels.
          type: number
          format: float
        fy:
          description: Focal length in pixels.
          type: number
          format: float
    Result:
      description: CPS result.
      required:
        - coordinate
        - uuid
      properties:
        coordinate:
          $ref: "#/components/schemas/Coordinate"
        uuid:
          $ref: "#/components/schemas/Uuid"
    Uuid:
      description: Universally unique identifier.
      type: string
      format: uuid
    Gravity:
      description: If available, the orientation of the image as a unit quaternion in a local right-handed coordinate system with gravity in the positive y direction. If no gravity is provided, it is assumed that the image is perfectly gravity-aligned
      type: object
      required:
        - w
        - x
        - y
        - z
      properties:
        w:
          description: The orientation quaternion's *w* coefficient
          type: number
          format: float
        x:
          description: The orientation quaternion's *x* coefficient
          type: number
          format: float
        y:
          description: The orientation quaternion's *y* coefficient
          type: number
          format: float
        z:
          description: The orientation quaternion's *z* coefficient
          type: number
          format: float
    Position:
      description: If available, the position of the image in a right-handed local coordinate system with gravity in the positive y direction. If no position is provided, it is assumed that the image is at the coordinate system's origin.
      type: object
      required:
        - x
        - y
        - z
      properties:
        x:
          description: The position of the image along the x-axis in meters.
          type: number
          format: float
        y:
          description: The position of the image along the y-axis in meters.
          type: number
          format: float
        z:
          description: The position of the image along the z-axis in meters.
          type: number
          format: float
    ReferenceFrame:
      description: The position and orientation of a reference frame with respect to the image frame in local, right-handed coordinate system with gravity in the positive y direction. If this parameter is passed, the localization result will be the pose of the reference frame, and not of the localized image.
      type: object
      required:
        - position
        - orientation
      properties:
        position:
          $ref: "#/components/schemas/Position"
        orientation:
          $ref: "#/components/schemas/Gravity"
    ImageResolution:
      description: Resolution of an image.
      type: object
      required:
        - height
        - width
      properties:
        height:
          description: Height of image in pixels.
          type: number
          format: integer
        width:
          description: Width of image in pixels.
          type: number
          format: integer